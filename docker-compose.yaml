version: '3.9'

services:
  # ========================================
  # üóìÔ∏è MICROSERVI√áO SCHEDULER (ETL/JOB)
  # ========================================
  scheduler-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scheduler-microservice
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      # Azure Key Vault Configuration
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_KEYVAULT_ENDPOINT=${AZURE_KEYVAULT_ENDPOINT}
      
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=azure,prod
      
      # Database Configuration (via Key Vault secrets)
      - conexao-de-sorte-database-r2dbc-url=${conexao-de-sorte-database-r2dbc-url:-r2dbc:mysql://mysql-db:3306/conexao_de_sorte_scheduler}
      - conexao-de-sorte-database-jdbc-url=${conexao-de-sorte-database-jdbc-url:-jdbc:mysql://mysql-db:3306/conexao_de_sorte_scheduler}
      - conexao-de-sorte-database-username=${conexao-de-sorte-database-username:-scheduler_user}
      - conexao-de-sorte-database-password=${conexao-de-sorte-database-password:-scheduler_password}
      
      # Redis Configuration (via Key Vault secrets)
      - conexao-de-sorte-redis-host=${conexao-de-sorte-redis-host:-redis}
      - conexao-de-sorte-redis-port=${conexao-de-sorte-redis-port:-6379}
      - conexao-de-sorte-redis-password=${conexao-de-sorte-redis-password:-redis_password}
      - conexao-de-sorte-redis-database=${conexao-de-sorte-redis-database:-0}
      
      # JWT Configuration (via Key Vault secrets)
      - conexao-de-sorte-jwt-issuer=${conexao-de-sorte-jwt-issuer:-https://auth.conexaodesorte.com}
      - conexao-de-sorte-jwt-jwks-uri=${conexao-de-sorte-jwt-jwks-uri:-https://auth.conexaodesorte.com/.well-known/jwks.json}
      
      # CORS Configuration (via Key Vault secrets)
      - conexao-de-sorte-cors-allowed-origins=${conexao-de-sorte-cors-allowed-origins:-*}
      - conexao-de-sorte-cors-allow-credentials=${conexao-de-sorte-cors-allow-credentials:-true}
      
      # SSL Configuration (via Key Vault secrets)
      - conexao-de-sorte-ssl-enabled=${conexao-de-sorte-ssl-enabled:-false}
      
      # Logging
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_CONEXAODESORTE=DEBUG
    depends_on:
      - scheduler-mysql
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - scheduler-network
    volumes:
      - ./logs:/app/logs

  # ========================================
  # üóÑÔ∏è MYSQL DATABASE (DESENVOLVIMENTO)
  # ========================================
  scheduler-mysql:
    image: mysql:8.0
    container_name: scheduler-mysql
    restart: unless-stopped
    ports:
      - "3311:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_pass123!
      - MYSQL_DATABASE=conexao_sorte_scheduler
      - MYSQL_USER=scheduler_user
      - MYSQL_PASSWORD=scheduler_pass123!
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=512M
      --max-connections=150
    volumes:
      - scheduler-mysql-data:/var/lib/mysql
    networks:
      - scheduler-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 10

# ========================================
# üíæ VOLUMES PERSISTENTES
# ========================================
volumes:
  scheduler-mysql-data:
    driver: local

# ========================================
# üåê REDE ISOLADA
# ========================================
networks:
  scheduler-network:
    driver: bridge
