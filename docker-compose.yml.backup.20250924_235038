
services:
  # ========================================
  # üóìÔ∏è MICROSERVI√áO SCHEDULER (ETL/JOB)
  # ========================================
  scheduler:
    image: ghcr.io/wibson82/conexao-de-sorte-backend-scheduler:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SCHEDULER_LOG_LEVEL=INFO
      - LOGGING_LEVEL_ROOT=INFO
      # Database Configuration
      - DATABASE_HOST=conexao-mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=conexao_de_sorte
      - DATABASE_USERNAME=conexao
      # Secrets via Docker Secrets
      - DATABASE_PASSWORD_FILE=/run/secrets/DATABASE_PASSWORD
      # Host/Port defaults for entrypoint script
      - CONEXAO_DE_SORTE_DATABASE_HOST=conexao-mysql
      - CONEXAO_DE_SORTE_DATABASE_PORT=3306
    secrets:
      - DATABASE_R2DBC_URL
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
      - REDIS_HOST
      - REDIS_PORT
      - REDIS_PASSWORD
      - REDIS_DATABASE
      - JWT_SECRET
      - JWT_ISSUER
      - JWT_JWKS_URI
      - JWT_SIGNING_KEY
      - JWT_VERIFICATION_KEY
      - SERVER_PORT
      - CORS_ALLOWED_ORIGINS
      - CORS_ALLOW_CREDENTIALS
      - ENCRYPTION_MASTER_KEY
    networks:
      - conexao-network-swarm
    volumes:
      - scheduler-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

    # ==========================================================================
    # üè∑Ô∏è TRAEFIK LABELS - SCHEDULER HEALTH MONITORING
    # ==========================================================================
    labels:
      # Habilitar Traefik para este servi√ßo
      - "traefik.enable=true"
      - "traefik.docker.network=conexao-network-swarm"

      # Configura√ß√£o do servi√ßo Scheduler
      - "traefik.http.services.scheduler-service.loadbalancer.server.port=8085"
      - "traefik.http.services.scheduler-service.loadbalancer.healthcheck.path=/actuator/health"
      - "traefik.http.services.scheduler-service.loadbalancer.healthcheck.interval=30s"

      # Health check individual do Scheduler
      - "traefik.http.routers.scheduler-health.rule=Host(`traefik.conexaodesorte.com.br`) && PathPrefix(`/health/service/scheduler`)"
      - "traefik.http.routers.scheduler-health.entrypoints=websecure"
      - "traefik.http.routers.scheduler-health.tls.certresolver=letsencrypt"
      - "traefik.http.routers.scheduler-health.service=scheduler-service"
      - "traefik.http.routers.scheduler-health.middlewares=scheduler-health-rewrite"

      # Middleware para reescrever path do health check
      - "traefik.http.middlewares.scheduler-health-rewrite.replacepath.path=/actuator/health"

      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Scheduler"
      - "org.opencontainers.image.description=Microservi√ßo de agendamento e processamento ETL"
      - "org.opencontainers.image.version=1.0.0"
      - "microservice.type=scheduler"
      - "microservice.category=etl"

  # ========================================
  # üìã OBSERVA√á√ÉO: MySQL e Redis fornecidos pela infraestrutura-core
  # ========================================
  # O MySQL e Redis s√£o gerenciados pelo projeto infraestrutura-core
  # Este microservi√ßo conecta aos servi√ßos compartilhados:

# ========================================
# üíæ VOLUMES PERSISTENTES
# ========================================
# Volumes removidos: MySQL pr√≥prio foi eliminado
# Usa infraestrutura compartilhada via conexao-network-swarm

# ========================================
# üåê REDE EXTERNA (CONEX√ÉO COM OUTROS MICROSERVI√áOS)
# ========================================
networks:
  conexao-network-swarm:
    name: conexao-network-swarm
    external: true

volumes:
  scheduler-logs:

secrets:
  DATABASE_R2DBC_URL:
    external: true
  DATABASE_USERNAME:
    external: true
  DATABASE_PASSWORD:
    external: true
  REDIS_HOST:
    external: true
  REDIS_PORT:
    external: true
  REDIS_PASSWORD:
    external: true
  REDIS_DATABASE:
    external: true
  JWT_SECRET:
    external: true
  JWT_ISSUER:
    external: true
  JWT_JWKS_URI:
    external: true
  JWT_SIGNING_KEY:
    external: true
  JWT_VERIFICATION_KEY:
    external: true
  SERVER_PORT:
    external: true
  CORS_ALLOWED_ORIGINS:
    external: true
  CORS_ALLOW_CREDENTIALS:
    external: true
  ENCRYPTION_MASTER_KEY:
    external: true
