# =============================================================================
# CONFIGURAÇÃO AZURE KEY VAULT - SCHEDULER MICROSERVICE
# =============================================================================
# Microserviço responsável pelo agendamento e ETL de loterias
# Segredos necessários: Database, Redis, JWT (VALIDAÇÃO), CORS, SSL
# =============================================================================

spring:
  config:
    activate:
      on-profile: azure
    import:
      - "optional:configtree:/run/secrets/"

  # ===== SPRING CLOUD AZURE - DISABLED FOR MANUAL CONFIG =====
  cloud:
    azure:
      keyvault:
        secret:
          enabled: false  # Usando configuração manual AzureKeyVaultConfig
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
        subscription-id: ${AZURE_SUBSCRIPTION_ID:}
        client-id: ${AZURE_CLIENT_ID:}

  # ===== REDIS CONFIGURATION =====
  data:
    redis:
      host: ${conexao-de-sorte-redis-host:localhost}
      port: ${conexao-de-sorte-redis-port:6379}
      password: ${conexao-de-sorte-redis-password:}
      database: ${conexao-de-sorte-redis-database:1}
      timeout: 2000ms
      lettuce:
        pool:
          enabled: true
          max-active: 25
          max-idle: 10
          min-idle: 5
          max-wait: 3000ms

user-service:
  url: ${USER_SERVICE_URL:http://localhost:8082}

# ===== MICROSERVICE SPECIFIC CONFIG =====
app:
  microservice:
    name: scheduler
    version: @project.version@
    description: "Microserviço de agendamento e ETL de loterias"
  
  # JWT Configuration - GERAÇÃO E VALIDAÇÃO COMPLETA
  # JWT Configuration - VALIDAÇÃO APENAS (não gera tokens)
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${conexao-de-sorte-jwt-issuer:https://auth.conexaodesorte.com}
          jwk-set-uri: ${conexao-de-sorte-jwt-jwks-uri:}

  # CORS Configuration
  cors:
    allowed-origins: ${conexao-de-sorte-cors-allowed-origins:*}
    allow-credentials: ${conexao-de-sorte-cors-allow-credentials:true}
    
  # Scheduler Configuration
  scheduler:
    etl:
      loterias:
        enabled: true
        backoff-ms: 2000
        max-retries: 5

# ===== LOGGING =====
logging:
  level:
    '[com.azure]': INFO
    '[com.azure.security.keyvault]': INFO
    '[org.springframework.cloud.azure]': INFO
    '[br.tec.facilitaservicos.autenticacao]': DEBUG
    '[org.springframework.security]': DEBUG

# ===== MANAGEMENT ENDPOINTS - HARDENED =====
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      exclude: env,configprops,beans,conditions,mappings,threaddump,heapdump,startup
  endpoint:
    health:
      show-details: when-authorized
      roles: ADMIN
    info:
      enabled: true
    env:
      enabled: false
    configprops:
      enabled: false
    beans:
      enabled: false
    conditions:
      enabled: false
    mappings:
      enabled: false
    threaddump:
      enabled: false
    heapdump:
      enabled: false
    startup:
      enabled: false
  health:
    db:
      enabled: true

# ===== SECURITY AUDIT LOGGING =====
security:
  audit:
    enabled: true
    include-request-details: true
    include-client-info: true
    log-authentication-success: true
    log-authentication-failure: true
    log-authorization-failure: true

# ===== SERVER CONFIGURATION =====
server:
  port: ${conexao-de-sorte-server-port:8081}
  compression:
    enabled: true
  http2:
    enabled: true
