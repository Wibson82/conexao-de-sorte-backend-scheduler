# =======================================================================
# üìÖ Scheduler - Azure Configuration Profile
# =======================================================================
# Profile espec√≠fico para execu√ß√£o no ambiente Azure com integra√ß√£o
# completa ao Azure Key Vault e configura√ß√µes otimizadas para produ√ß√£o
# =======================================================================

spring:
  config:
    import: optional:configtree:/run/secrets/
  # Azure Key Vault Configuration (Produ√ß√£o)
  cloud:
    azure:
      keyvault:
        secret:
          # N√£o habilitar por padr√£o; somente quando AZURE_KEYVAULT_ENABLED=true
          enabled: ${AZURE_KEYVAULT_ENABLED:false}
          # Endpoint s√≥ √© utilizado quando habilitado
          endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
          # property-sources mantido, mas efetivo somente quando enabled=true
          property-sources:
            - endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
              name: ${AZURE_KEYVAULT_NAME:kv-conexao-de-sorte}
              case-sensitive: false
      profile:
        tenant-id: ${AZURE_TENANT_ID}
        subscription-id: ${AZURE_SUBSCRIPTION_ID}
        client-id: ${AZURE_CLIENT_ID}

  # Database Configuration for Azure - Padr√£o h√≠brido
  r2dbc:
    url: ${DATABASE_R2DBC_URL:${conexao-de-sorte-database-r2dbc-url}}
    username: ${DATABASE_USERNAME:${conexao-de-sorte-database-username}}
    password: ${DATABASE_PASSWORD:${conexao-de-sorte-database-password}}
    properties:
      prepStmtCacheSize: 300
      prepStmtCacheSqlLimit: 2048
      cachePrepStmts: true
      useServerPrepStmts: true
      rewriteBatchedStatements: true

  # Redis Configuration for Azure - Padr√£o h√≠brido
  data:
    redis:
      host: ${REDIS_HOST:${conexao-de-sorte-redis-host}}
      port: ${REDIS_PORT:${conexao-de-sorte-redis-port:6379}}
      password: ${REDIS_PASSWORD:${conexao-de-sorte-redis-password}}
      database: ${REDIS_DATABASE:${conexao-de-sorte-redis-database:3}}
      timeout: 3000ms
      lettuce:
        pool:
          enabled: true
          max-active: 10
          max-idle: 5
          min-idle: 2
          max-wait: 5000ms
        shutdown-timeout: 100ms

# Azure-specific configurations using Key Vault secrets
conexao:
  jwt:
    issuer: ${conexao-de-sorte-jwt-issuer}
    jwks-uri: ${conexao-de-sorte-jwt-jwks-uri}
    key-id: ${conexao-de-sorte-jwt-key-id}
    secret: ${conexao-de-sorte-jwt-secret}
    signing-key: ${conexao-de-sorte-jwt-signing-key}
    verification-key: ${conexao-de-sorte-jwt-verification-key}
    private-key: ${conexao-de-sorte-jwt-privateKey}
    public-key: ${conexao-de-sorte-jwt-publicKey}

  encryption:
    master-key: ${conexao-de-sorte-encryption-master-key}
    master-password: ${conexao-de-sorte-encryption-master-password}
    backup-key: ${conexao-de-sorte-encryption-backup-key}

  database:
    jdbc-url: ${conexao-de-sorte-database-jdbc-url}
    r2dbc-url: ${conexao-de-sorte-database-r2dbc-url}
    username: ${conexao-de-sorte-database-username}
    password: ${conexao-de-sorte-database-password}
    proxysql-password: ${conexao-de-sorte-database-proxysql-password}

# Server configuration for Azure production
server:
  port: ${conexao-de-sorte-server-port:8084}
  shutdown: graceful

  # Enhanced security headers for production
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# Management endpoints with Azure-specific security
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,scheduledtasks
      base-path: /actuator

  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
    scheduledtasks:
      enabled: true
      sensitive: true

  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

  # Enhanced metrics for production monitoring
  prometheus:
    metrics:
      export:
        enabled: true
        descriptions: false
        step: 60s

  metrics:
    distribution:
      percentiles:
        "[http.server.requests]": 0.5,0.95,0.99
        "[scheduler.tasks]": 0.5,0.95,0.99

  # Azure-optimized tracing
  tracing:
    enabled: true
    sampling:
      probability: ${TRACING_PROBABILITY:0.1}  # Lower in production
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://observability-microservice:9411/api/v2/spans}

# Production logging configuration
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

  level:
    "[org.springframework.scheduling]": ${SCHEDULER_LOG_LEVEL:INFO}
    "[org.springframework.security]": ${SECURITY_LOG_LEVEL:WARN}
    "[br.tec.facilitaservicos.scheduler]": ${APP_LOG_LEVEL:INFO}
    "[org.springframework.web]": ${WEB_LOG_LEVEL:WARN}
    "[org.springframework.r2dbc]": ${R2DBC_LOG_LEVEL:WARN}
    root: ${ROOT_LOG_LEVEL:WARN}

  file:
    name: ${LOG_FILE:/app/logs/scheduler.log}
    max-size: 100MB
    max-history: 30
    total-size-cap: 1GB

# Scheduler-specific configuration for Azure
scheduler:
  # Production feature flags
  features:
    metrics-collection: true
    health-checks: true
    task-persistence: true
    distributed-locking: true

  # Task execution settings
  pool:
    core-size: 5
    max-size: 20
    queue-capacity: 100
    keep-alive: 300s
    thread-name-prefix: "scheduler-"

  # Azure-specific task settings
  tasks:
    lottery-draw:
      enabled: true
      fixed-rate: 3600000  # 1 hour
      initial-delay: 60000  # 1 minute

    result-consolidation:
      enabled: true
      cron: "0 5 2 * * *"  # Daily at 2:05 AM

    notification-cleanup:
      enabled: true
      cron: "0 0 3 * * *"  # Daily at 3:00 AM

    audit-archiving:
      enabled: true
      cron: "0 30 1 * * SUN"  # Weekly on Sunday at 1:30 AM

    metrics-aggregation:
      enabled: true
      fixed-rate: 300000  # 5 minutes
      initial-delay: 30000  # 30 seconds

# Production-optimized Circuit Breaker settings for external calls
resilience4j:
  circuitbreaker:
    instances:
      database:
        sliding-window-size: 100
        minimum-number-of-calls: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5

      notification-service:
        sliding-window-size: 50
        minimum-number-of-calls: 5
        failure-rate-threshold: 60
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 3

  timelimiter:
    instances:
      database:
        timeout-duration: 10s
      notification-service:
        timeout-duration: 5s

  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: 500ms
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.net.SocketTimeoutException
          - java.io.IOException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
